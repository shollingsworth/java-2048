import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.event.*;
import javax.swing.*;

public class Game extends JFrame implements KeyListener, ActionListener {
	private static final long serialVersionUID = 1L;
	
	JTextArea displayArea;
    JTextField typingArea;
    int cnt = 0;

    public static void main(String[] args) {
        //Schedule a job for event dispatch thread: creating and showing this application's GUI.
        javax.swing.SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                createAndShowGUI();
            }
        });
    }
    
    private static void createAndShowGUI() {
        //Create and set up the window.
        Game frame = new Game("Game 2048!");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
        //Set up the content pane.
        frame.addComponentsToPane();
        
        
        //Display the window.
        frame.pack();
        frame.setVisible(true);
    }
    
    private void addComponentsToPane() {
        Board2048 b = new Board2048(); //setup new board
        b.printBoard(); 


        JButton button = new JButton("Clear");
        button.addActionListener(this);
        
        typingArea = new JTextField(20);
        typingArea.addKeyListener(this);
        
        displayArea = new JTextArea();
        displayArea.setEditable(false);
        JScrollPane scrollPane = new JScrollPane(displayArea);
        scrollPane.setPreferredSize(new Dimension(400, 400));
        
        getContentPane().add(typingArea, BorderLayout.PAGE_START);
        getContentPane().add(scrollPane, BorderLayout.CENTER);
        getContentPane().add(button, BorderLayout.PAGE_END);
    }
    
    public Game(String name) {
        super(name);
    }
    
    public void keyPressed(KeyEvent e) { } //don't care but required
    public void keyReleased(KeyEvent e) { } //don't care but required
    public void keyTyped(KeyEvent e) { 
       String c = e.getKeyChar() + ""; 
       switch(c.toLowerCase()) {
          case "y":
             displayArea.setText("-Y-" + cnt++);
             break;
          case "n":
             displayArea.setText("-N-" + cnt++);
             break;
          case "q":
             System.exit(0);
             break;
       }
       typingArea.setText("");
       typingArea.requestFocusInWindow();
    }
    
    public void actionPerformed(ActionEvent e) {
        //Clear the text components.
        displayArea.setText("");
        displayArea.append(e.getActionCommand() + "\n");
        typingArea.setText("");
        
        //Return the focus to the typing area.
        typingArea.requestFocusInWindow();
    }
}
